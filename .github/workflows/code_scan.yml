name: Bandit Code Scan

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  bandit-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Specify the version of Python you need

    - name: Install Bandit
      run: |
        python -m pip install --upgrade pip
        pip install bandit

    - name: Run Bandit
      id: bandit
      run: |
        bandit -r . -f json -o bandit_output.json || true

    - name: Check Bandit output
      run: |
        severity=$(jq -r '.results[] | select(.issue_severity == "CRITICAL" or .issue_severity == "HIGH").issue_severity' bandit_output.json)
        if [ -n "$severity" ]; then
          echo "Critical or above vulnerabilities found by Bandit."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\": \"Block\"}" "https://api.github.com/repos/ns-ga/issues/${{ github.event.pull_request.number }}/comments"
          exit 1
        else
          echo "No critical or above vulnerabilities found by Bandit."
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"body\": \"Successful\"}" "https://api.github.com/repos/ns-ga/issues/${{ github.event.pull_request.number }}/comments"
        fi

    - name: Merge Pull Request
      if: github.event_name == 'pull_request' && github.event.action == 'opened' && steps.bandit.outputs.severity == ''
      run: |
        curl -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"merge_method\": \"squash\"}" "https://api.github.com/repos/ns-ga/pulls/${{ github.event.pull_request.number }}/merge"

