name: Bandit Security Scan

on:
  pull_request:
    branches:
      - main

jobs:
  bandit_scan:
    runs-on: ubuntu-latest
    name: Run Bandit Security Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Bandit
        run: |
          bandit -r . -f json -o bandit_output.json || true

      - name: Parse Bandit Output
        id: parse_output
        run: |
          # Parse Bandit output JSON
          bandit_output=$(<bandit_output.json)
          # Extract counts of HIGH and MEDIUM vulnerabilities using jq
          high_count=$(echo "$bandit_output" | jq '[.metrics[] | .["SEVERITY"]["HIGH"] // 0] | add')
          medium_count=$(echo "$bandit_output" | jq '[.metrics[] | .["SEVERITY"]["MEDIUM"] // 0] | add')

          # Check if HIGH or MEDIUM count is greater than 0
          if (( high_count > 0 )) || (( medium_count > 0 )); then
              echo "Critical or High vulnerability found! Blocking commit."
              echo "::set-output name=status::fail"
          else
              echo "No critical or high vulnerabilities found. Commit allowed."
              echo "::set-output name=status::success"
          fi

      - name: Add Comment to PR
        run: |
          if [[ "${{ steps.parse_output.outputs.status }}" == "fail" ]]; then
            comment="Block"
          else
            comment="Successful"
          fi
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -X POST -d "{\"body\":\"$comment\"}" \
               "https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues/${{ github.event.number }}/comments"

      - name: Block Commit on Failure
        if: steps.parse_output.outputs.status == 'fail'
        run: exit 1
